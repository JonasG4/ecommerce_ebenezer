// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id_rol      Int        @id @default(autoincrement())
  nombre      String
  descripcion String?
  is_active   Boolean    @default(true)
  usuarios    Usuarios[]
}

model Usuarios {
  id_usuario       Int              @id @default(autoincrement())
  codigo           String           @unique
  id_rol           Int
  nombre           String
  apellido         String
  telefono         String?
  email            String           @unique @default("")
  password         String?
  imagen           String           @default("")
  account_provider Account_provider @default(EMAIL)
  is_active        Boolean          @default(true)
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt

  role        Roles               @relation(fields: [id_rol], references: [id_rol])
  comentarios Comentarios[]
  likes       Comentarios_Likes[]
}

enum Account_provider {
  GOOGLE
  FACEBOOK
  EMAIL
}

model Categorias {
  id_categoria  Int             @id @default(autoincrement())
  nombre        String
  codigo        String          @unique
  descripcion   String?
  imagen        String
  is_active     Boolean         @default(true)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Productos     Productos[]
  Subcategorias Subcategorias[]
}

model Subcategorias {
  id_subcategoria Int      @id @default(autoincrement())
  id_categoria    Int
  codigo          String
  nombre          String
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  categoria Categorias  @relation(fields: [id_categoria], references: [id_categoria])
  Productos Productos[]
}

model Marcas {
  id_marca    Int         @id @default(autoincrement())
  nombre      String
  codigo      String      @unique
  descripcion String?
  imagen      String
  is_active   Boolean     @default(true)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  Productos   Productos[]
}

model Productos {
  id_producto     Int            @id @default(autoincrement())
  codigo          String         @unique
  id_categoria    Int
  id_subcategoria Int
  id_marca        Int
  nombre          String
  descripcion     String?
  portada         String?
  precio          Float
  stock           Int
  estado          ProductoStatus @default(PUBLICADO)
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt

  imagenes     Producto_imagenes[]
  marca        Marcas              @relation(fields: [id_marca], references: [id_marca])
  categoria    Categorias          @relation(fields: [id_categoria], references: [id_categoria])
  subcategoria Subcategorias       @relation(fields: [id_subcategoria], references: [id_subcategoria])
  comentarios  Comentarios[]
  descuento    Descuento[]
}

enum ProductoStatus {
  PUBLICADO
  ARCHIVADO
  ELIMINADO
}

enum Estado {
  ACTIVO
  INACTIVO
}

model Descuento {
  id_promociones Int      @id @default(autoincrement())
  i_producto     Int
  porcentaje     Int
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  estado         Estado   @default(ACTIVO)

  producto Productos @relation(fields: [i_producto], references: [id_producto])
}

model Comentarios {
  id_comentario Int      @id @default(autoincrement())
  id_producto   Int
  id_usuario    Int
  comentario    String?
  calificacion  Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  producto Productos           @relation(fields: [id_producto], references: [id_producto])
  usuario  Usuarios            @relation(fields: [id_usuario], references: [id_usuario])
  likes    Comentarios_Likes[]
}

model Comentarios_Likes {
  id_comentario_like Int      @id @default(autoincrement())
  id_comentario      Int
  id_usuario         Int
  created_at         DateTime @default(now())

  comentario Comentarios @relation(fields: [id_comentario], references: [id_comentario])
  usuario    Usuarios    @relation(fields: [id_usuario], references: [id_usuario])
}

model Producto_imagenes {
  id_producto_imagen Int      @id @default(autoincrement())
  id_producto        Int
  source             String
  created_at         DateTime @default(now())

  producto Productos @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)
}
